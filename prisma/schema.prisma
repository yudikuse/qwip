// =========================
// Prisma Schema COMPLETO
// =========================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"       // Supabase/Neon/Postgres
  url      = env("DATABASE_URL")
}

// =========================
// MODELS
// =========================

model Seller {
  id        String   @id @default(cuid())
  name      String
  phone     String
  createdAt DateTime @default(now())

  // Relacionamento (3 rows já existem segundo seus logs)
  ads       Ad[]
}

model Ad {
  id           String   @id @default(cuid())
  title        String
  description  String
  priceCents   Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // ===== Campos que JÁ EXISTEM no seu banco (pelos logs) =====
  // >>> NÃO REMOVER <<<  (se remover, a Vercel vai tentar dropar e dar erro de data loss)
  city        String
  uf          String
  lat         Float
  lng         Float
  centerLat   Float?
  centerLng   Float?
  radiusKm    Float?
  expiresAt   DateTime?
  isActive    Boolean  @default(true)

  // Relacionamento com Seller (já existe sellerId no seu banco)
  sellerId   String?
  seller     Seller?  @relation(fields: [sellerId], references: [id])

  // ===== NOVOS CAMPOS DE IMAGEM (opcionais para não quebrar os 25 registros existentes) =====
  imageUrl     String?           // URL pública no storage (ex.: Vercel Blob)
  imageMime    String?           // ex.: "image/jpeg", "image/png"
  imageWidth   Int?
  imageHeight  Int?
  imageSha256  String?           // hash para dedupe/antiabuso

  // Índices (opcionais, não quebram nada)
  @@index([imageSha256])
  @@index([city, uf])
  @@index([isActive, expiresAt])
}
